version: '3.8'

services:
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - frontend-cache:/app/node_modules/.cache
    environment:
      - REACT_APP_HASURA_GRAPHQL_URL=http://localhost:8080/v1/graphql
      - REACT_APP_WS_URL=ws://localhost:4000
    depends_on:
      - hasura
      - express

  postgres:
    image: postgres:13
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_PASSWORD: postgrespassword
      POSTGRES_DB: app_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  hasura:
    image: hasura/graphql-engine:latest
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/app_db
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ADMIN_SECRET: your_admin_secret
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log

  express:
    build:
      context: ./backend/express
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    volumes:
      - ./backend/express:/app
      - /app/node_modules
    environment:
      - DATABASE_URL=postgres://postgres:postgrespassword@postgres:5432/app_db
    depends_on:
      - postgres

volumes:
  postgres_data:
  frontend-cache: 